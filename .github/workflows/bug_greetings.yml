name: Bug Report Greeting
on:
  issues:
    types: [opened]
jobs:
  greeting:
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    - name: Check if the issue is labeled as a Bug Report
      id: check_bug_label
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        ISSUE_NUMBER=$(jq -r '.issue.number' "$GITHUB_EVENT_PATH")
        LABELS=$(gh issue view $ISSUE_NUMBER --json labels --jq '.labels[].name')
        
        if echo "$LABELS" | grep -q 'bug'; then
          echo "This issue is labeled as a bug report. Checking if the issue creator is the repository owner."
          echo "skip_label_check=false" >> $GITHUB_ENV
        else
          echo "This issue is not labeled as a bug report. Skipping greeting message."
          echo "skip_label_check=true" >> $GITHUB_ENV
        fi
    - name: Check if the issue creator is the repo owner
      if: env.skip_label_check == 'false'
      id: check_owner
      run: |
        ISSUE_AUTHOR=$(jq -r '.issue.user.login' "$GITHUB_EVENT_PATH")
        REPO_OWNER=$(jq -r '.repository.owner.login' "$GITHUB_EVENT_PATH")
        if [ "$ISSUE_AUTHOR" = "$REPO_OWNER" ]; then
          echo "The issue creator is the repository owner. Skipping greeting message."
          echo "skip=true" >> $GITHUB_ENV
        else
          echo "The issue creator is not the repository owner. Checking for previous bug reports..."
          echo "skip=false" >> $GITHUB_ENV
        fi
    - name: Check if the user has submitted a bug report before
      if: env.skip == 'false'
      id: check_first_bug_report
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        ISSUE_AUTHOR=$(jq -r '.issue.user.login' "$GITHUB_EVENT_PATH")
        ISSUE_NUMBER=$(jq -r '.issue.number' "$GITHUB_EVENT_PATH")
        
        # Get all issues (both open and closed) by the author except the current one
        PREVIOUS_REPORTS=$(gh issue list --author "$ISSUE_AUTHOR" --label "Bug" --state all --json number --jq '. | map(select(.number != '$ISSUE_NUMBER')) | length')
        echo "User $ISSUE_AUTHOR has submitted $PREVIOUS_REPORTS bug report(s) previously"
        
        if [ "$PREVIOUS_REPORTS" -eq 0 ]; then
          echo "This is the user's first bug report. Sending greeting message."
          echo "skip_first_report=false" >> $GITHUB_ENV
        else
          echo "User has previous bug reports. Skipping greeting message."
          echo "skip_first_report=true" >> $GITHUB_ENV
        fi
    - name: Send Greeting Message
      if: env.skip_label_check == 'false' && env.skip != 'true' && env.skip_first_report != 'true'
      uses: actions/github-script@v6
      with:
        script: |
          const issueNumber = context.payload.issue.number;
          const message = `
          **🛠️ Thank you for reporting a bug!**  
          Your issue has been successfully submitted and is now awaiting review. We appreciate your help in making Dantotsu better.
          **🔍 What Happens Next**  
          - Our team will investigate the issue and provide updates as soon as possible.  
          - You may be asked for additional details or clarification if needed.  
          - Once resolved, we'll notify you of the fix or provide a workaround.
          **👥 Connect with Us**  
          - **[Discord](https://discord.com/invite/4HPZ5nAWwM)**: Engage with our community and ask questions.  
          - **[Telegram](https://t.me/dantotsuapp)**: Reach out for real-time discussions and updates.
          We're working hard to resolve the issue and appreciate your patience!
          `;
          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: issueNumber,
            body: message
          });
